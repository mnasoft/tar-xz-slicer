#!/bin/bash

# === tar-xz-slicer: Stream-friendly –∞—Ä—Ö–∏–≤–∞—Ü–∏—è –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ ===
# üõ† –£–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥–∏ —Å xz-—Å–∂–∞—Ç–∏–µ–º, –Ω–∞—Ä–µ–∑–∞–µ—Ç –Ω–∞ —Å–ª–∞–π—Å—ã –±–µ–∑ tmp-—Ñ–∞–π–ª–æ–≤
# üì§ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω–æ, —Å–∫–ª–µ–∏–≤–∞—è —á–∞—Å—Ç–∏ –Ω–∞ –ª–µ—Ç—É
# üìÖ –í–µ—Ä—Å–∏—è: 0.1 | –ê–≤—Ç–æ—Ä: –ú–∏–∫–æ–ª–∞ + Copilot | –î–∞—Ç–∞: 2025-06-30

# –¶–≤–µ—Ç–∞
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
BLUE="\033[0;34m"
RED="\033[0;31m"
NC="\033[0m"

log_info()    { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[OK]${NC} $1"; }
log_warn()    { echo -e "${YELLOW}[WARN]${NC} $1"; }
log_error()   { echo -e "${RED}[ERROR]${NC} $1"; }

print_usage() {
  echo -e "${YELLOW}USAGE:${NC}"
  echo -e "  tar-xz-slicer pack <–∫–∞—Ç–∞–ª–æ–≥> [—Ä–∞–∑–º–µ—Ä_—Å–ª–∞–π—Å–∞] [–ø—Ä–µ—Ñ–∏–∫—Å]"
  echo -e "     –£–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∫–∞—Ç–∞–ª–æ–≥ —Å xz-—Å–∂–∞—Ç–∏–µ–º –∏ —Ä–∞–∑–±–∏–≤–∞–µ—Ç –ø–æ —á–∞—Å—Ç—è–º"
  echo -e "     –ü—Ä–∏–º–µ—Ä: tar-xz-slicer pack ./my_folder 512m backup_"
  echo
  echo -e "  tar-xz-slicer unpack <–ø—Ä–µ—Ñ–∏–∫—Å>"
  echo -e "     –°–∫–ª–µ–∏–≤–∞–µ—Ç —á–∞—Å—Ç–∏ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ—Ç –∞—Ä—Ö–∏–≤"
  echo -e "     –ü—Ä–∏–º–µ—Ä: tar-xz-slicer unpack backup_"
  echo
  echo -e "  tar-xz-slicer --list"
  echo -e "     –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
  echo
}

pack_and_slice() {
  local full_path="$1"
  local slice_size="${2:-1024m}"
  local out_prefix="${3:-archive.part.}"

  if [[ ! -d "$full_path" ]]; then
    log_error "–ö–∞—Ç–∞–ª–æ–≥ '$full_path' –Ω–µ –Ω–∞–π–¥–µ–Ω"
    return 1
  fi

  local dirname="$(basename "$full_path")"
  local parentdir="$(dirname "$full_path")"
  local outdir="$(pwd)"  # –∫–∞—Ç–∞–ª–æ–≥, –æ—Ç–∫—É–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å–∫—Ä–∏–ø—Ç

  log_info "–£–ø–∞–∫–æ–≤–∫–∞ '${dirname}' —Å –Ω–∞—Ä–µ–∑–∫–æ–π –ø–æ ${slice_size}, –ø—Ä–µ—Ñ–∏–∫—Å: ${out_prefix}"

  (
    cd "$parentdir" || exit 1
    tar -c "$dirname" | xz -c | split -b "$slice_size" \
      --suffix-length=6 --numeric-suffixes=0 \
      - "${outdir}/${out_prefix}"
  )

  if [[ $? -eq 0 ]]; then
    log_success "–°–æ–∑–¥–∞–Ω–æ:"
    ls -1 "${outdir}/${out_prefix}"* | sort | while read -r f; do
      echo -e "  ${BLUE}$(basename "$f")${NC}"
    done
  else
    log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞"
    return 1
  fi
}


unslice_and_unpack() {
  local slice_prefix="$1"

  if [[ -z "$slice_prefix" ]]; then
    log_error "–ù–µ —É–∫–∞–∑–∞–Ω –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏"
    return 1
  fi

  if ! ls "${slice_prefix}"* &> /dev/null; then
    log_error "–°–ª–∞–π—Å—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '${slice_prefix}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    return 1
  fi

  log_info "–û–±—ä–µ–¥–∏–Ω—è–µ–º —Å–ª–∞–π—Å—ã –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º –∞—Ä—Ö–∏–≤..."
  cat "${slice_prefix}"* | xz -d | tar -x

  if [[ $? -eq 0 ]]; then
    log_success "–ê—Ä—Ö–∏–≤ —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
  else
    log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–µ"
    return 1
  fi
}

main() {
  case "$1" in
    pack)
      shift
      if [[ $# -lt 1 ]]; then
        log_warn "–ù–µ —É–∫–∞–∑–∞–Ω –∫–∞—Ç–∞–ª–æ–≥ –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏."
        print_usage
        return 1
      fi
      pack_and_slice "$@"
      ;;
    unpack)
      shift
      if [[ $# -lt 1 ]]; then
        log_warn "–ù–µ —É–∫–∞–∑–∞–Ω –ø—Ä–µ—Ñ–∏–∫—Å –¥–ª—è —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏."
        print_usage
        return 1
      fi
      unslice_and_unpack "$@"
      ;;
    --help|-h)
      print_usage
      ;;
    --list)
      echo -e "üéõ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
      echo "  pack     ‚Äî –£–ø–∞–∫–æ–≤–∞—Ç—å –∏ –Ω–∞—Ä–µ–∑–∞—Ç—å"
      echo "  unpack   ‚Äî –°–∫–ª–µ–∏—Ç—å –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å"
      echo "  --help   ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
      echo "  --list   ‚Äî –ü–µ—Ä–µ—á–∏—Å–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã"
      ;;
    *)
      log_warn "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: '$1'"
      print_usage
      return 1
      ;;
  esac
}

main "$@"
